use std::os::raw::c_int;

#[repr(C)]
#[allow(non_camel_case_types)]
pub enum Result {
    SUCCESS = 0,
    ERROR_INVALID_VALUE = 1,
    ERROR_OUT_OF_MEMORY = 2,
    ERROR_NOT_INITIALIZED = 3,
    ERROR_DEINITIALIZED = 4,
    ERROR_PROFILER_DISABLED = 5,
    ERROR_PROFILER_NOT_INITIALIZED = 6,
    ERROR_PROFILER_ALREADY_STARTED = 7,
    ERROR_PROFILER_ALREADY_STOPPED = 8,
    ERROR_NO_DEVICE = 100,
    ERROR_INVALID_DEVICE = 101,
    ERROR_INVALID_IMAGE = 200,
    ERROR_INVALID_CONTEXT = 201,
    ERROR_CONTEXT_ALREADY_CURRENT = 202,
    ERROR_MAP_FAILED = 205,
    ERROR_UNMAP_FAILED = 206,
    ERROR_ARRAY_IS_MAPPED = 207,
    ERROR_ALREADY_MAPPED = 208,
    ERROR_NO_BINARY_FOR_GPU = 209,
    ERROR_ALREADY_ACQUIRED = 210,
    ERROR_NOT_MAPPED = 211,
    ERROR_NOT_MAPPED_AS_ARRAY = 212,
    ERROR_NOT_MAPPED_AS_POINTER = 213,
    ERROR_ECC_UNCORRECTABLE = 214,
    ERROR_UNSUPPORTED_LIMIT = 215,
    ERROR_CONTEXT_ALREADY_IN_USE = 216,
    ERROR_PEER_ACCESS_UNSUPPORTED = 217,
    ERROR_INVALID_PTX = 218,
    ERROR_INVALID_GRAPHICS_CONTEXT = 219,
    ERROR_NVLINK_UNCORRECTABLE = 220,
    ERROR_JIT_COMPILER_NOT_FOUND = 221,
    ERROR_INVALID_SOURCE = 300,
    ERROR_FILE_NOT_FOUND = 301,
    ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND = 302,
    ERROR_SHARED_OBJECT_INIT_FAILED = 303,
    ERROR_OPERATING_SYSTEM = 304,
    ERROR_INVALID_HANDLE = 400,
    ERROR_ILLEGAL_STATE = 401,
    ERROR_NOT_FOUND = 500,
    ERROR_NOT_READY = 600,
    ERROR_ILLEGAL_ADDRESS = 700,
    ERROR_LAUNCH_OUT_OF_RESOURCES = 701,
    ERROR_LAUNCH_TIMEOUT = 702,
    ERROR_LAUNCH_INCOMPATIBLE_TEXTURING = 703,
    ERROR_PEER_ACCESS_ALREADY_ENABLED = 704,
    ERROR_PEER_ACCESS_NOT_ENABLED = 705,
    ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
    ERROR_CONTEXT_IS_DESTROYED = 709,
    ERROR_ASSERT = 710,
    ERROR_TOO_MANY_PEERS = 711,
    ERROR_HOST_MEMORY_ALREADY_REGISTERED = 712,
    ERROR_HOST_MEMORY_NOT_REGISTERED = 713,
    ERROR_HARDWARE_STACK_ERROR = 714,
    ERROR_ILLEGAL_INSTRUCTION = 715,
    ERROR_MISALIGNED_ADDRESS = 716,
    ERROR_INVALID_ADDRESS_SPACE = 717,
    ERROR_INVALID_PC = 718,
    ERROR_LAUNCH_FAILED = 719,
    ERROR_COOPERATIVE_LAUNCH_TOO_LARGE = 720,
    ERROR_NOT_PERMITTED = 800,
    ERROR_NOT_SUPPORTED = 801,
    ERROR_SYSTEM_NOT_READY = 802,
    ERROR_SYSTEM_DRIVER_MISMATCH = 803,
    ERROR_COMPAT_NOT_SUPPORTED_ON_DEVICE = 804,
    ERROR_STREAM_CAPTURE_UNSUPPORTED = 900,
    ERROR_STREAM_CAPTURE_INVALIDATED = 901,
    ERROR_STREAM_CAPTURE_MERGE = 902,
    ERROR_STREAM_CAPTURE_UNMATCHED = 903,
    ERROR_STREAM_CAPTURE_UNJOINED = 904,
    ERROR_STREAM_CAPTURE_ISOLATION = 905,
    ERROR_STREAM_CAPTURE_IMPLICIT = 906,
    ERROR_CAPTURED_EVENT = 907,
    ERROR_STREAM_CAPTURE_WRONG_THREAD = 908,
    ERROR_TIMEOUT = 909,
    ERROR_GRAPH_EXEC_UPDATE_FAILURE = 910,
    ERROR_UNKNOWN = 999,
}

#[repr(C)]
#[allow(non_camel_case_types)]
pub enum DeviceAttribute {
    MAX_THREADS_PER_BLOCK = 1,
    MAX_BLOCK_DIM_X = 2,
    MAX_BLOCK_DIM_Y = 3,
    MAX_BLOCK_DIM_Z = 4,
    MAX_GRID_DIM_X = 5,
    MAX_GRID_DIM_Y = 6,
    MAX_GRID_DIM_Z = 7,
    MAX_SHARED_MEMORY_PER_BLOCK = 8,
    TOTAL_CONSTANT_MEMORY = 9,
    WARP_SIZE = 10,
    MAX_PITCH = 11,
    MAX_REGISTERS_PER_BLOCK = 12,
    CLOCK_RATE = 13,
    TEXTURE_ALIGNMENT = 14,
    GPU_OVERLAP = 15,
    MULTIPROCESSOR_COUNT = 16,
    KERNEL_EXEC_TIMEOUT = 17,
    INTEGRATED = 18,
    CAN_MAP_HOST_MEMORY = 19,
    COMPUTE_MODE = 20,
    MAXIMUM_TEXTURE1D_WIDTH = 21,
    MAXIMUM_TEXTURE2D_WIDTH = 22,
    MAXIMUM_TEXTURE2D_HEIGHT = 23,
    MAXIMUM_TEXTURE3D_WIDTH = 24,
    MAXIMUM_TEXTURE3D_HEIGHT = 25,
    MAXIMUM_TEXTURE3D_DEPTH = 26,
    MAXIMUM_TEXTURE2D_LAYERED_WIDTH = 27,
    MAXIMUM_TEXTURE2D_LAYERED_HEIGHT = 28,
    MAXIMUM_TEXTURE2D_LAYERED_LAYERS = 29,
    SURFACE_ALIGNMENT = 30,
    CONCURRENT_KERNELS = 31,
    ECC_ENABLED = 32,
    PCI_BUS_ID = 33,
    PCI_DEVICE_ID = 34,
    TCC_DRIVER = 35,
    MEMORY_CLOCK_RATE = 36,
    GLOBAL_MEMORY_BUS_WIDTH = 37,
    L2_CACHE_SIZE = 38,
    MAX_THREADS_PER_MULTIPROCESSOR = 39,
    ASYNC_ENGINE_COUNT = 40,
    UNIFIED_ADDRESSING = 41,
    MAXIMUM_TEXTURE1D_LAYERED_WIDTH = 42,
    MAXIMUM_TEXTURE1D_LAYERED_LAYERS = 43,
    CAN_TEX2D_GATHER = 44,
    MAXIMUM_TEXTURE2D_GATHER_WIDTH = 45,
    MAXIMUM_TEXTURE2D_GATHER_HEIGHT = 46,
    MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE = 47,
    MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE = 48,
    MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE = 49,
    PCI_DOMAIN_ID = 50,
    TEXTURE_PITCH_ALIGNMENT = 51,
    MAXIMUM_TEXTURECUBEMAP_WIDTH = 52,
    MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH = 53,
    MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS = 54,
    MAXIMUM_SURFACE1D_WIDTH = 55,
    MAXIMUM_SURFACE2D_WIDTH = 56,
    MAXIMUM_SURFACE2D_HEIGHT = 57,
    MAXIMUM_SURFACE3D_WIDTH = 58,
    MAXIMUM_SURFACE3D_HEIGHT = 59,
    MAXIMUM_SURFACE3D_DEPTH = 60,
    MAXIMUM_SURFACE1D_LAYERED_WIDTH = 61,
    MAXIMUM_SURFACE1D_LAYERED_LAYERS = 62,
    MAXIMUM_SURFACE2D_LAYERED_WIDTH = 63,
    MAXIMUM_SURFACE2D_LAYERED_HEIGHT = 64,
    MAXIMUM_SURFACE2D_LAYERED_LAYERS = 65,
    MAXIMUM_SURFACECUBEMAP_WIDTH = 66,
    MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH = 67,
    MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS = 68,
    MAXIMUM_TEXTURE1D_LINEAR_WIDTH = 69,
    MAXIMUM_TEXTURE2D_LINEAR_WIDTH = 70,
    MAXIMUM_TEXTURE2D_LINEAR_HEIGHT = 71,
    MAXIMUM_TEXTURE2D_LINEAR_PITCH = 72,
    MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH = 73,
    MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT = 74,
    COMPUTE_CAPABILITY_MAJOR = 75,
    COMPUTE_CAPABILITY_MINOR = 76,
    MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH = 77,
    STREAM_PRIORITIES_SUPPORTED = 78,
    GLOBAL_L1_CACHE_SUPPORTED = 79,
    LOCAL_L1_CACHE_SUPPORTED = 80,
    MAX_SHARED_MEMORY_PER_MULTIPROCESSOR = 81,
    MAX_REGISTERS_PER_MULTIPROCESSOR = 82,
    MANAGED_MEMORY = 83,
    MULTI_GPU_BOARD = 84,
    MULTI_GPU_BOARD_GROUP_ID = 85,
    HOST_NATIVE_ATOMIC_SUPPORTED = 86,
    SINGLE_TO_DOUBLE_PRECISION_PERF_RATIO = 87,
    PAGEABLE_MEMORY_ACCESS = 88,
    CONCURRENT_MANAGED_ACCESS = 89,
    COMPUTE_PREEMPTION_SUPPORTED = 90,
    CAN_USE_HOST_POINTER_FOR_REGISTERED_MEM = 91,
    CAN_USE_STREAM_MEM_OPS = 92,
    CAN_USE_64_BIT_STREAM_MEM_OPS = 93,
    CAN_USE_STREAM_WAIT_VALUE_NOR = 94,
    COOPERATIVE_LAUNCH = 95,
    COOPERATIVE_MULTI_DEVICE_LAUNCH = 96,
    MAX_SHARED_MEMORY_PER_BLOCK_OPTIN = 97,
    CAN_FLUSH_REMOTE_WRITES = 98,
    HOST_REGISTER_SUPPORTED = 99,
    PAGEABLE_MEMORY_ACCESS_USES_HOST_PAGE_TABLES = 100,
    DIRECT_MANAGED_MEM_ACCESS_FROM_HOST = 101,
    VIRTUAL_ADDRESS_MANAGEMENT_SUPPORTED = 102,
    HANDLE_TYPE_POSIX_FILE_DESCRIPTOR_SUPPORTED = 103,
    HANDLE_TYPE_WIN32_HANDLE_SUPPORTED = 104,
    HANDLE_TYPE_WIN32_KMT_HANDLE_SUPPORTED = 105,
    MAX = 106,
}

impl Result {
    pub fn from_l0(result: l0::ze_result_t) -> Result {
        match result {
            l0::ze_result_t::ZE_RESULT_SUCCESS => Result::SUCCESS,
            l0::ze_result_t::ZE_RESULT_ERROR_UNINITIALIZED => Result::ERROR_NOT_INITIALIZED,
            l0::ze_result_t::ZE_RESULT_ERROR_INVALID_ENUMERATION => Result::ERROR_INVALID_VALUE,
            l0::ze_result_t::ZE_RESULT_ERROR_INVALID_ARGUMENT => Result::ERROR_INVALID_VALUE,
            l0::ze_result_t::ZE_RESULT_ERROR_OUT_OF_HOST_MEMORY => Result::ERROR_OUT_OF_MEMORY,
            _ => Result::ERROR_UNKNOWN
        }
    }
}

#[repr(C)]
#[derive(PartialEq, Eq)]
pub struct Uuid {
    pub x: [std::os::raw::c_uchar; 16]
}

#[repr(transparent)]
pub struct Device(pub c_int);